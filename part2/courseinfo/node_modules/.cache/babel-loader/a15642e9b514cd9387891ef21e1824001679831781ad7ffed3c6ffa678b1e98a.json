{"ast":null,"code":"var _jsxFileName = \"/Users/nemr/fullstackopen/part2/courseinfo/src/App.js\";\nimport Course from './Course';\n\n/*const Header = (props) => {\n  return (\n      <h2>{props.name}</h2>\n  )\n}\n\nconst Content = (props) => {\n  return (\n      <div>\n        {props.parts.map(part => \n          <Part key={part.id} part={part} />)}\n      </div>\n  )\n}\n\nconst Part = (props) => {\n  return (\n      <p>\n        {props.part.name} {props.part.exercises}\n      </p>\n  )\n  \n}\n\nconst Total = (props) => {\n  const total = props.parts.reduce((sum, parts) => sum + parts.exercises, 0)\n\n  return (\n      <b>Number of exercises {total}</b>\n  )\n}\n\n\nconst Course = ({ courses }) => {\n  return (\n    <div>\n      <h1>Web development curriculum</h1>\n      {courses.map(course =>\n        <div>\n          <Header key={course.id} name={course.name}/>\n          <Content parts={course.parts}/>\n          <Total parts={course.parts} />\n        </div>\n      )}\n    </div>\n  )  \n}\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(Course, {\n    courses: courses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Course","App","courses","name","id","parts","exercises"],"sources":["/Users/nemr/fullstackopen/part2/courseinfo/src/App.js"],"sourcesContent":["import Course from './Course'\n\n/*const Header = (props) => {\n  return (\n      <h2>{props.name}</h2>\n  )\n}\n\nconst Content = (props) => {\n  return (\n      <div>\n        {props.parts.map(part => \n          <Part key={part.id} part={part} />)}\n      </div>\n  )\n}\n\nconst Part = (props) => {\n  return (\n      <p>\n        {props.part.name} {props.part.exercises}\n      </p>\n  )\n  \n}\n\nconst Total = (props) => {\n  const total = props.parts.reduce((sum, parts) => sum + parts.exercises, 0)\n\n  return (\n      <b>Number of exercises {total}</b>\n  )\n}\n\n\nconst Course = ({ courses }) => {\n  return (\n    <div>\n      <h1>Web development curriculum</h1>\n      {courses.map(course =>\n        <div>\n          <Header key={course.id} name={course.name}/>\n          <Content parts={course.parts}/>\n          <Total parts={course.parts} />\n        </div>\n      )}\n    </div>\n  )  \n}\n*/\n\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return <Course courses={courses}/>\n}\n\nexport default App"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAiDA,MAAMC,GAAG,GAAG,MAAM;EAChB,MAAMC,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,oCAAoC;IAC1CC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,CACL;MACEF,IAAI,EAAE,uBAAuB;MAC7BG,SAAS,EAAE,EAAE;MACbF,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,0BAA0B;MAChCG,SAAS,EAAE,CAAC;MACZF,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,sBAAsB;MAC5BG,SAAS,EAAE,EAAE;MACbF,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,OAAO;MACbG,SAAS,EAAE,EAAE;MACbF,EAAE,EAAE;IACN,CAAC;EAEL,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IACfC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,CACL;MACEF,IAAI,EAAE,SAAS;MACfG,SAAS,EAAE,CAAC;MACZF,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,aAAa;MACnBG,SAAS,EAAE,CAAC;MACZF,EAAE,EAAE;IACN,CAAC;EAEL,CAAC,CACF;EAED,oBAAO,QAAC,MAAM;IAAC,OAAO,EAAEF;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAE;AACpC,CAAC;AAAA,KA/CKD,GAAG;AAiDT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}